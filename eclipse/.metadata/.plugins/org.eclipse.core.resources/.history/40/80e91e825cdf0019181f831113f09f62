package fr;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;

public class run {

	public static void main(String[] args) {
		HashMap<Integer, String> map = new HashMap<Integer, String>();
		try
        {
			 BufferedReader br;
				try {
					br = new BufferedReader(new FileReader("assets/dataMapStage.nc"));
					String line = "";
					String[] d;
					while((line = br.readLine()) != null)
					{
						d = GetArrayString(line);
						int id = Integer.parseInt(d[0]);
						String data = d[1];
					}
				} catch (FileNotFoundException e) {
					e.printStackTrace();
				} catch (IOException e) {
					e.printStackTrace();

				}	
         
        }
        catch (NumberFormatException ignore)
        {
        	System.out.println("nnn");
        }
		
		PrintWriter writer = null;
		try {
			writer = new PrintWriter(new File("assets/dataMapStage.nc"), "UTF-8");
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		
		}
		for (int i = 0; i < Stage.size(); i++) {
           writer.println(Stage.get(i));
        }
		writer.close();

	}
	public static int compterOccurrences(String maChaine, char recherche)
	{
		 int nb = 0;
		 for (int i=0; i < maChaine.length(); i++)
		 {
			 if (maChaine.charAt(i) == recherche)
			 {
				 nb++;
			 }
		 }
		 return nb;
	}
	public static String[] GetArrayString(String txt)
	{
		if(txt != null)
		{
			int t = txt.length();
			String[] finale = new String[compterOccurrences(txt, '$')];
			String pre = "";
			char cara, cara2;
			int d = 0;
			for(int i = 0; i < t; i++) 
			{
				
				cara = txt.charAt(i);
				if(cara == '$')
				{
					finale[d] = pre;
					pre = "";
					d++;
				}
				else
				{
					pre += cara;
				}
			}
			return finale;
		}
		else
		{
			return null;
		}
	}

}
